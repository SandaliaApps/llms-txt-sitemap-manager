<?php

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

// Add meta description for Yoast readability in the plugin settings page
add_action('admin_head', function() {
    $screen = get_current_screen();
    if ($screen && $screen->id === 'settings_page_llmstxtsm_settings') {
        echo '<meta name="description" content="Manage LLMs.txt settings to control AI crawlers, training permissions, and add custom rules for WordPress.">';
    }
});


// Add Yoast SEO schema
add_action('admin_footer', function() {
    $screen = get_current_screen();
    if ($screen && $screen->id === 'settings_page_llmstxtsm_settings') {
        ?>
        <script type="application/ld+json">
        {
            "@context": "https://schema.org",
            "@type": "SoftwareApplication",
            "name": "LLMs.txt Sitemap Manager",
            "operatingSystem": "WordPress",
            "applicationCategory": "SEOPlugin",
            "description": "Manage AI crawler and training permissions using LLMs.txt for WordPress.",
            "url": "<?php echo esc_html(admin_url('options-general.php?page=llmstxtsm_settings')); ?>"
        }
        </script>
        <?php
    }
});

// Register rewrite rule and query var
add_action('init', function() {
    add_rewrite_rule('^llms\.txt$', 'index.php?llms_txt=1', 'top');
});
add_filter('query_vars', function($vars) {
    $vars[] = 'llms_txt';
    return $vars;
});

// Output llms.txt content with Markdown-style URLs
add_action('template_redirect', function() {
    if (get_query_var('llms_txt') == 1) {
        header('Content-Type: text/plain; charset=utf-8');

        $allow_ai = get_option('llmstxtsm_allow_ai', 1);
        $allow_training = get_option('llmstxtsm_allow_training', 1);
        $custom_rules = get_option('llmstxtsm_custom_rules', '');

        echo "# LLMs.txt generated by LLMs.txt Sitemap Manager Plugin\n\n";

        echo "User-agent: *\n";
        echo $allow_ai ? "Allow: /\n" : "Disallow: /\n";
        echo $allow_training ? "# AI Training: Allowed\n" : "# AI Training: Disallowed\n";

        // ---------------------
        // Categories
        // ---------------------
        $categories = get_categories(['hide_empty' => false]);
        if (!empty($categories)) {
            echo "\n## Categories\n";
            foreach ($categories as $cat) {
                echo "- [".esc_html($cat->name)."](" . esc_html(get_category_link($cat->term_id)) . ")\n";
            }
        }

        // ---------------------
        // Posts
        // ---------------------
        $posts = get_posts([
            'post_type' => 'post',
            'post_status' => 'publish',
            'numberposts' => -1,
        ]);
        if (!empty($posts)) {
            echo "\n## Posts\n";
            foreach ($posts as $post) {
                echo "- [".esc_html($post->post_title)."](" . esc_html(get_permalink($post->ID)) . ")\n";
            }
        }

        // ---------------------
        // Pages
        // ---------------------
        $pages = get_posts([
            'post_type' => 'page',
            'post_status' => 'publish',
            'numberposts' => -1,
        ]);
        if (!empty($pages)) {
            echo "\n## Pages\n";
            foreach ($pages as $page) {
                echo "- [".esc_html($page->post_title)."](" . esc_html(get_permalink($page->ID)) . ")\n";
            }
        }

        // ---------------------
        // Custom Post Types (excluding 'post' and 'page')
        // ---------------------
        $cpts = get_post_types(['public' => true], 'names');
        $exclude = ['post', 'page'];
        foreach ($cpts as $cpt) {
            if (in_array($cpt, $exclude)) continue;

            $items = get_posts([
                'post_type' => $cpt,
                'post_status' => 'publish',
                'numberposts' => -1,
            ]);

            if (!empty($items)) {
                $label = ucfirst($cpt);
                echo "\n## ". esc_html($label)."\n";
                foreach ($items as $item) {
                    echo "- [".esc_html($item->post_title)."](" . esc_html(get_permalink($item->ID)) . ")\n";
                }
            }
        }

        // ---------------------
        // Custom rules
        // ---------------------
        if (!empty($custom_rules)) {
            echo "\n# Custom Rules\n" . esc_html($custom_rules) . "\n";
        }

        exit;
    }
});